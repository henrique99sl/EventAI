"""add password_hash to users

Revision ID: 8cd7ce8eac19
Revises:
Create Date: 2025-08-10 14:42:44.771487

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "8cd7ce8eac19"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.alter_column(
            "password_hash",
            existing_type=sa.TEXT(),
            type_=sa.String(),
            existing_nullable=False,
        )
        batch_op.drop_constraint(batch_op.f("users_email_key"), type_="unique")
        batch_op.drop_constraint(batch_op.f("users_username_key"), type_="unique")
        batch_op.drop_column("role")
        batch_op.drop_column("created_at")

    with op.batch_alter_table("venues", schema=None) as batch_op:
        batch_op.drop_column("created_at")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("venues", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "created_at",
                postgresql.TIMESTAMP(),
                server_default=sa.text("CURRENT_TIMESTAMP"),
                autoincrement=False,
                nullable=True,
            )
        )

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "created_at",
                postgresql.TIMESTAMP(),
                server_default=sa.text("CURRENT_TIMESTAMP"),
                autoincrement=False,
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "role",
                sa.VARCHAR(length=20),
                server_default=sa.text("'participant'::character varying"),
                autoincrement=False,
                nullable=True,
            )
        )
        batch_op.create_unique_constraint(
            batch_op.f("users_username_key"), ["username"]
        )
        batch_op.create_unique_constraint(batch_op.f("users_email_key"), ["email"])
        batch_op.alter_column(
            "password_hash",
            existing_type=sa.String(),
            type_=sa.TEXT(),
            existing_nullable=False,
        )

    # ### end Alembic commands ###
